@use "sass:map";

$space: (
    0: 0px,
    1: 6px,
    2: 8px,
    3: 12px,
    4: 16px,
    5: 24px,
    6: 48px,
);

$weights: (
    'normal': 400,
    'semibold': 500,
    'bold': 700,
    'extrabold': 800,
);

$decorations: (
    'n': none,
    'under': 'underline'
);

$colors: (
    'white': white,
    'black': black,
    'faded': rgb(0, 0, 0, .55),
);

$font-sizes: (
    'h6': 0.8em,
    'h5': 0.9em,
    'h4': 1em,
    'h3': 1.1em,
    'h2': 1.2em,
    'h1': 1.4em,
);

$screens: (
    'small': (
        'min': 0px,
        'max': 599px,
    ),
    'medium': (
        'min': 600px,
        'max': 1280px,
    ),
    'large': (
        'min': 1281px,
        'max': 999999999px,
    ),
);

$flex-justify: (
    'between': space-between,
    'around': space-around,
    'start': flex-start,
    'end': flex-end,
    'center': center,
);

$flex-align: (
    'center': center,
    'start': flex-start,
    'end': flex-end,
);

$positions: (
    't': top,
    'b': bottom,
    'l': left,
    'r': right,
);

.d {
    &--flex {
        display: flex;

        @each $justify, $value in $flex-justify {
            &--justify--#{$justify} {
                justify-content: $value;
            }
        }

        @each $align, $value in $flex-align {
            &--align--#{$align} {
                align-items: $value;
            }
        }
    }

    &--gap {
        @each $key, $val in $space {
            &-#{$key} {
                gap: $val;
            }
        }
    }

    &--m {
        @each $key, $val in $space {
            &-#{$key} {
                margin: $val !important;
            }
        }

        @each $position, $valp in $positions {
            &-#{$position} {
                @each $key, $val in $space {
                    &-#{$key} {
                        margin-#{$valp}: $val !important;
                    }
                }
            }
        }

        &-v {
            @each $key, $val in $space {
                &-#{$key} {
                    margin-bottom: $val !important;
                    margin-top: $val !important;
                }
            }
        }

        &-h {
            @each $key, $val in $space {
                &-#{$key} {
                    margin-left: $val !important;
                    margin-right: $val !important;
                }
            }
        }
    }

    &--p {
        @each $key, $val in $space {
            &-#{$key} {
                padding: $val !important;
            }
        }

        @each $position, $valp in $positions {
            &-#{$position} {
                @each $key, $val in $space {
                    &-#{$key} {
                        padding-#{$valp}: $val !important;
                    }
                }
            }
        }

        &-v {
            @each $key, $val in $space {
                &-#{$key} {
                    padding-top: $val !important;
                    padding-bottom: $val !important;
                }
            }
        }

        &-h {
            @each $key, $val in $space {
                &-#{$key} {
                    padding-left: $val !important;
                    padding-right: $val !important;
                }
            }
        }
    }
}

.t {
    @each $size, $value in $font-sizes {
        &--#{$size} {
            font-size: $value;
        }
    }

    &--d {
        @each $decoration, $value in $decorations {
            &--#{$decoration} {
                text-decoration: $value;
            }
        }
    }

    &--w {
        @each $weight, $value in $weights {
            &--#{$weight} {
                font-weight: $value;
            }
        }
    }
}

.c {
    @each $name, $color in $colors {
        &--#{$name} {
            color: $color;
        }
    }
}

.s {
    &--only {
        @each $screen, $val in $screens {
            &--#{$screen} {
                @media (max-width: map.get($val, 'min')) {
                    display: none;
                }
                @media (min-width: map.get($val, 'max')) {
                    display: none;
                }
            }
        }
    }
    &--hide {
        @each $screen, $val in $screens {
            &--#{$screen} {
                @media (min-width: map.get($val, 'min')) and (max-width: map.get($val, 'max')) {
                    display: none;
                }
            }
        }
    }
}